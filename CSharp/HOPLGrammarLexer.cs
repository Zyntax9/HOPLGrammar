//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.1-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from HOPLGrammar.g4 by ANTLR 4.6.1-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace HOPL.Grammar {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.1-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class HOPLGrammarLexer : Lexer {
	public const int
		NAMESPACE_KW=1, IMPORT_KW=2, ALIAS_KW=3, REQUIRED_KW=4, CONSTANT_KW=5, 
		LOCK_KW=6, RETURN_KW=7, AWAIT_KW=8, TRIGGER_KW=9, HANDLER_KW=10, LIST_KW=11, 
		TUPLE_KW=12, IF_KW=13, ELSE_KW=14, FOR_KW=15, FOREACH_KW=16, IN_KW=17, 
		WHILE_KW=18, NOT_KW=19, AND_KW=20, OR_KW=21, BOX_OPEN=22, BOX_CLOSE=23, 
		CURLY_OPEN=24, CURLY_CLOSE=25, PARAN_OPEN=26, PARAN_CLOSE=27, INTEGER=28, 
		FLOAT=29, BOOLEAN=30, STRING=31, INTEGER_VAL=32, FLOAT_VAL=33, BOOLEAN_VAL=34, 
		STRING_VAL=35, DOT=36, COMMA=37, ASSIGN=38, MULT=39, DIV=40, PLUS=41, 
		MINUS=42, EQ=43, NEQ=44, LESS=45, LEQ=46, GRT=47, GEQ=48, CONCAT=49, UIGNORE=50, 
		SL_COMMENT=51, ML_COMMENT=52, ID=53, WS=54, TERM=55, ERR=56;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"NAMESPACE_KW", "IMPORT_KW", "ALIAS_KW", "REQUIRED_KW", "CONSTANT_KW", 
		"LOCK_KW", "RETURN_KW", "AWAIT_KW", "TRIGGER_KW", "HANDLER_KW", "LIST_KW", 
		"TUPLE_KW", "IF_KW", "ELSE_KW", "FOR_KW", "FOREACH_KW", "IN_KW", "WHILE_KW", 
		"NOT_KW", "AND_KW", "OR_KW", "BOX_OPEN", "BOX_CLOSE", "CURLY_OPEN", "CURLY_CLOSE", 
		"PARAN_OPEN", "PARAN_CLOSE", "INTEGER", "FLOAT", "BOOLEAN", "STRING", 
		"INTEGER_VAL", "FLOAT_VAL", "BOOLEAN_VAL", "STRING_VAL", "DOT", "COMMA", 
		"ASSIGN", "MULT", "DIV", "PLUS", "MINUS", "EQ", "NEQ", "LESS", "LEQ", 
		"GRT", "GEQ", "CONCAT", "UIGNORE", "SL_COMMENT", "ML_COMMENT", "ID", "WS", 
		"TERM", "ERR"
	};


	public HOPLGrammarLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'namespace'", "'import'", "'as'", "'required'", "'const'", "'lock'", 
		"'return'", "'await'", "'trigger'", "'handle'", "'list'", "'tuple'", "'if'", 
		"'else'", "'for'", "'foreach'", "'in'", "'while'", "'not'", "'and'", "'or'", 
		"'['", "']'", "'{'", "'}'", "'('", "')'", "'int'", "'float'", "'bool'", 
		"'string'", null, null, null, null, "'.'", "','", "'='", "'*'", "'/'", 
		"'+'", "'-'", "'=='", "'!='", "'<'", "'<='", "'>'", "'>='", "'::'", "'_'", 
		null, null, null, null, "';'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "NAMESPACE_KW", "IMPORT_KW", "ALIAS_KW", "REQUIRED_KW", "CONSTANT_KW", 
		"LOCK_KW", "RETURN_KW", "AWAIT_KW", "TRIGGER_KW", "HANDLER_KW", "LIST_KW", 
		"TUPLE_KW", "IF_KW", "ELSE_KW", "FOR_KW", "FOREACH_KW", "IN_KW", "WHILE_KW", 
		"NOT_KW", "AND_KW", "OR_KW", "BOX_OPEN", "BOX_CLOSE", "CURLY_OPEN", "CURLY_CLOSE", 
		"PARAN_OPEN", "PARAN_CLOSE", "INTEGER", "FLOAT", "BOOLEAN", "STRING", 
		"INTEGER_VAL", "FLOAT_VAL", "BOOLEAN_VAL", "STRING_VAL", "DOT", "COMMA", 
		"ASSIGN", "MULT", "DIV", "PLUS", "MINUS", "EQ", "NEQ", "LESS", "LEQ", 
		"GRT", "GEQ", "CONCAT", "UIGNORE", "SL_COMMENT", "ML_COMMENT", "ID", "WS", 
		"TERM", "ERR"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "HOPLGrammar.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2:\x18C\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x4\x31\t\x31\x4\x32"+
		"\t\x32\x4\x33\t\x33\x4\x34\t\x34\x4\x35\t\x35\x4\x36\t\x36\x4\x37\t\x37"+
		"\x4\x38\t\x38\x4\x39\t\x39\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3"+
		"\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4"+
		"\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3"+
		"\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3"+
		"\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3"+
		"\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3"+
		"\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3"+
		"\xF\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x11"+
		"\x3\x11\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13"+
		"\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15"+
		"\x3\x15\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x18\x3\x18\x3\x19\x3\x19"+
		"\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D"+
		"\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3\x1F"+
		"\x3\x1F\x3 \x3 \x3 \x3 \x3 \x3 \x3 \x3!\x5!\x10E\n!\x3!\x6!\x111\n!\r"+
		"!\xE!\x112\x3\"\x5\"\x116\n\"\x3\"\x6\"\x119\n\"\r\"\xE\"\x11A\x3\"\x3"+
		"\"\x6\"\x11F\n\"\r\"\xE\"\x120\x3#\x3#\x3#\x3#\x3#\x3#\x3#\x3#\x3#\x5"+
		"#\x12C\n#\x3$\x3$\x3$\x3$\x3$\x5$\x133\n$\a$\x135\n$\f$\xE$\x138\v$\x3"+
		"$\x3$\x3%\x3%\x3&\x3&\x3\'\x3\'\x3(\x3(\x3)\x3)\x3*\x3*\x3+\x3+\x3,\x3"+
		",\x3,\x3-\x3-\x3-\x3.\x3.\x3/\x3/\x3/\x3\x30\x3\x30\x3\x31\x3\x31\x3\x31"+
		"\x3\x32\x3\x32\x3\x32\x3\x33\x3\x33\x3\x34\x3\x34\x3\x34\x3\x34\a\x34"+
		"\x163\n\x34\f\x34\xE\x34\x166\v\x34\x3\x34\x3\x34\x3\x35\x3\x35\x3\x35"+
		"\x3\x35\a\x35\x16E\n\x35\f\x35\xE\x35\x171\v\x35\x3\x35\x3\x35\x3\x35"+
		"\x3\x35\x3\x35\x3\x36\x5\x36\x179\n\x36\x3\x36\x3\x36\a\x36\x17D\n\x36"+
		"\f\x36\xE\x36\x180\v\x36\x3\x37\x6\x37\x183\n\x37\r\x37\xE\x37\x184\x3"+
		"\x37\x3\x37\x3\x38\x3\x38\x3\x39\x3\x39\x3\x16F\x2\x2:\x3\x2\x3\x5\x2"+
		"\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17"+
		"\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14"+
		"\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2"+
		"\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$"+
		"G\x2%I\x2&K\x2\'M\x2(O\x2)Q\x2*S\x2+U\x2,W\x2-Y\x2.[\x2/]\x2\x30_\x2\x31"+
		"\x61\x2\x32\x63\x2\x33\x65\x2\x34g\x2\x35i\x2\x36k\x2\x37m\x2\x38o\x2"+
		"\x39q\x2:\x3\x2\b\x3\x2\x32;\x4\x2$$^^\x4\x2\f\f\xF\xF\x4\x2\x43\\\x63"+
		"|\x6\x2\x32;\x43\\\x61\x61\x63|\x5\x2\v\f\xF\xF\"\"\x199\x2\x3\x3\x2\x2"+
		"\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2"+
		"\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2"+
		"\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B"+
		"\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2"+
		"#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3"+
		"\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3"+
		"\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2"+
		";\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43"+
		"\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3"+
		"\x2\x2\x2\x2M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2"+
		"\x2\x2U\x3\x2\x2\x2\x2W\x3\x2\x2\x2\x2Y\x3\x2\x2\x2\x2[\x3\x2\x2\x2\x2"+
		"]\x3\x2\x2\x2\x2_\x3\x2\x2\x2\x2\x61\x3\x2\x2\x2\x2\x63\x3\x2\x2\x2\x2"+
		"\x65\x3\x2\x2\x2\x2g\x3\x2\x2\x2\x2i\x3\x2\x2\x2\x2k\x3\x2\x2\x2\x2m\x3"+
		"\x2\x2\x2\x2o\x3\x2\x2\x2\x2q\x3\x2\x2\x2\x3s\x3\x2\x2\x2\x5}\x3\x2\x2"+
		"\x2\a\x84\x3\x2\x2\x2\t\x87\x3\x2\x2\x2\v\x90\x3\x2\x2\x2\r\x96\x3\x2"+
		"\x2\x2\xF\x9B\x3\x2\x2\x2\x11\xA2\x3\x2\x2\x2\x13\xA8\x3\x2\x2\x2\x15"+
		"\xB0\x3\x2\x2\x2\x17\xB7\x3\x2\x2\x2\x19\xBC\x3\x2\x2\x2\x1B\xC2\x3\x2"+
		"\x2\x2\x1D\xC5\x3\x2\x2\x2\x1F\xCA\x3\x2\x2\x2!\xCE\x3\x2\x2\x2#\xD6\x3"+
		"\x2\x2\x2%\xD9\x3\x2\x2\x2\'\xDF\x3\x2\x2\x2)\xE3\x3\x2\x2\x2+\xE7\x3"+
		"\x2\x2\x2-\xEA\x3\x2\x2\x2/\xEC\x3\x2\x2\x2\x31\xEE\x3\x2\x2\x2\x33\xF0"+
		"\x3\x2\x2\x2\x35\xF2\x3\x2\x2\x2\x37\xF4\x3\x2\x2\x2\x39\xF6\x3\x2\x2"+
		"\x2;\xFA\x3\x2\x2\x2=\x100\x3\x2\x2\x2?\x105\x3\x2\x2\x2\x41\x10D\x3\x2"+
		"\x2\x2\x43\x115\x3\x2\x2\x2\x45\x12B\x3\x2\x2\x2G\x12D\x3\x2\x2\x2I\x13B"+
		"\x3\x2\x2\x2K\x13D\x3\x2\x2\x2M\x13F\x3\x2\x2\x2O\x141\x3\x2\x2\x2Q\x143"+
		"\x3\x2\x2\x2S\x145\x3\x2\x2\x2U\x147\x3\x2\x2\x2W\x149\x3\x2\x2\x2Y\x14C"+
		"\x3\x2\x2\x2[\x14F\x3\x2\x2\x2]\x151\x3\x2\x2\x2_\x154\x3\x2\x2\x2\x61"+
		"\x156\x3\x2\x2\x2\x63\x159\x3\x2\x2\x2\x65\x15C\x3\x2\x2\x2g\x15E\x3\x2"+
		"\x2\x2i\x169\x3\x2\x2\x2k\x178\x3\x2\x2\x2m\x182\x3\x2\x2\x2o\x188\x3"+
		"\x2\x2\x2q\x18A\x3\x2\x2\x2st\ap\x2\x2tu\a\x63\x2\x2uv\ao\x2\x2vw\ag\x2"+
		"\x2wx\au\x2\x2xy\ar\x2\x2yz\a\x63\x2\x2z{\a\x65\x2\x2{|\ag\x2\x2|\x4\x3"+
		"\x2\x2\x2}~\ak\x2\x2~\x7F\ao\x2\x2\x7F\x80\ar\x2\x2\x80\x81\aq\x2\x2\x81"+
		"\x82\at\x2\x2\x82\x83\av\x2\x2\x83\x6\x3\x2\x2\x2\x84\x85\a\x63\x2\x2"+
		"\x85\x86\au\x2\x2\x86\b\x3\x2\x2\x2\x87\x88\at\x2\x2\x88\x89\ag\x2\x2"+
		"\x89\x8A\as\x2\x2\x8A\x8B\aw\x2\x2\x8B\x8C\ak\x2\x2\x8C\x8D\at\x2\x2\x8D"+
		"\x8E\ag\x2\x2\x8E\x8F\a\x66\x2\x2\x8F\n\x3\x2\x2\x2\x90\x91\a\x65\x2\x2"+
		"\x91\x92\aq\x2\x2\x92\x93\ap\x2\x2\x93\x94\au\x2\x2\x94\x95\av\x2\x2\x95"+
		"\f\x3\x2\x2\x2\x96\x97\an\x2\x2\x97\x98\aq\x2\x2\x98\x99\a\x65\x2\x2\x99"+
		"\x9A\am\x2\x2\x9A\xE\x3\x2\x2\x2\x9B\x9C\at\x2\x2\x9C\x9D\ag\x2\x2\x9D"+
		"\x9E\av\x2\x2\x9E\x9F\aw\x2\x2\x9F\xA0\at\x2\x2\xA0\xA1\ap\x2\x2\xA1\x10"+
		"\x3\x2\x2\x2\xA2\xA3\a\x63\x2\x2\xA3\xA4\ay\x2\x2\xA4\xA5\a\x63\x2\x2"+
		"\xA5\xA6\ak\x2\x2\xA6\xA7\av\x2\x2\xA7\x12\x3\x2\x2\x2\xA8\xA9\av\x2\x2"+
		"\xA9\xAA\at\x2\x2\xAA\xAB\ak\x2\x2\xAB\xAC\ai\x2\x2\xAC\xAD\ai\x2\x2\xAD"+
		"\xAE\ag\x2\x2\xAE\xAF\at\x2\x2\xAF\x14\x3\x2\x2\x2\xB0\xB1\aj\x2\x2\xB1"+
		"\xB2\a\x63\x2\x2\xB2\xB3\ap\x2\x2\xB3\xB4\a\x66\x2\x2\xB4\xB5\an\x2\x2"+
		"\xB5\xB6\ag\x2\x2\xB6\x16\x3\x2\x2\x2\xB7\xB8\an\x2\x2\xB8\xB9\ak\x2\x2"+
		"\xB9\xBA\au\x2\x2\xBA\xBB\av\x2\x2\xBB\x18\x3\x2\x2\x2\xBC\xBD\av\x2\x2"+
		"\xBD\xBE\aw\x2\x2\xBE\xBF\ar\x2\x2\xBF\xC0\an\x2\x2\xC0\xC1\ag\x2\x2\xC1"+
		"\x1A\x3\x2\x2\x2\xC2\xC3\ak\x2\x2\xC3\xC4\ah\x2\x2\xC4\x1C\x3\x2\x2\x2"+
		"\xC5\xC6\ag\x2\x2\xC6\xC7\an\x2\x2\xC7\xC8\au\x2\x2\xC8\xC9\ag\x2\x2\xC9"+
		"\x1E\x3\x2\x2\x2\xCA\xCB\ah\x2\x2\xCB\xCC\aq\x2\x2\xCC\xCD\at\x2\x2\xCD"+
		" \x3\x2\x2\x2\xCE\xCF\ah\x2\x2\xCF\xD0\aq\x2\x2\xD0\xD1\at\x2\x2\xD1\xD2"+
		"\ag\x2\x2\xD2\xD3\a\x63\x2\x2\xD3\xD4\a\x65\x2\x2\xD4\xD5\aj\x2\x2\xD5"+
		"\"\x3\x2\x2\x2\xD6\xD7\ak\x2\x2\xD7\xD8\ap\x2\x2\xD8$\x3\x2\x2\x2\xD9"+
		"\xDA\ay\x2\x2\xDA\xDB\aj\x2\x2\xDB\xDC\ak\x2\x2\xDC\xDD\an\x2\x2\xDD\xDE"+
		"\ag\x2\x2\xDE&\x3\x2\x2\x2\xDF\xE0\ap\x2\x2\xE0\xE1\aq\x2\x2\xE1\xE2\a"+
		"v\x2\x2\xE2(\x3\x2\x2\x2\xE3\xE4\a\x63\x2\x2\xE4\xE5\ap\x2\x2\xE5\xE6"+
		"\a\x66\x2\x2\xE6*\x3\x2\x2\x2\xE7\xE8\aq\x2\x2\xE8\xE9\at\x2\x2\xE9,\x3"+
		"\x2\x2\x2\xEA\xEB\a]\x2\x2\xEB.\x3\x2\x2\x2\xEC\xED\a_\x2\x2\xED\x30\x3"+
		"\x2\x2\x2\xEE\xEF\a}\x2\x2\xEF\x32\x3\x2\x2\x2\xF0\xF1\a\x7F\x2\x2\xF1"+
		"\x34\x3\x2\x2\x2\xF2\xF3\a*\x2\x2\xF3\x36\x3\x2\x2\x2\xF4\xF5\a+\x2\x2"+
		"\xF5\x38\x3\x2\x2\x2\xF6\xF7\ak\x2\x2\xF7\xF8\ap\x2\x2\xF8\xF9\av\x2\x2"+
		"\xF9:\x3\x2\x2\x2\xFA\xFB\ah\x2\x2\xFB\xFC\an\x2\x2\xFC\xFD\aq\x2\x2\xFD"+
		"\xFE\a\x63\x2\x2\xFE\xFF\av\x2\x2\xFF<\x3\x2\x2\x2\x100\x101\a\x64\x2"+
		"\x2\x101\x102\aq\x2\x2\x102\x103\aq\x2\x2\x103\x104\an\x2\x2\x104>\x3"+
		"\x2\x2\x2\x105\x106\au\x2\x2\x106\x107\av\x2\x2\x107\x108\at\x2\x2\x108"+
		"\x109\ak\x2\x2\x109\x10A\ap\x2\x2\x10A\x10B\ai\x2\x2\x10B@\x3\x2\x2\x2"+
		"\x10C\x10E\a/\x2\x2\x10D\x10C\x3\x2\x2\x2\x10D\x10E\x3\x2\x2\x2\x10E\x110"+
		"\x3\x2\x2\x2\x10F\x111\t\x2\x2\x2\x110\x10F\x3\x2\x2\x2\x111\x112\x3\x2"+
		"\x2\x2\x112\x110\x3\x2\x2\x2\x112\x113\x3\x2\x2\x2\x113\x42\x3\x2\x2\x2"+
		"\x114\x116\a/\x2\x2\x115\x114\x3\x2\x2\x2\x115\x116\x3\x2\x2\x2\x116\x118"+
		"\x3\x2\x2\x2\x117\x119\t\x2\x2\x2\x118\x117\x3\x2\x2\x2\x119\x11A\x3\x2"+
		"\x2\x2\x11A\x118\x3\x2\x2\x2\x11A\x11B\x3\x2\x2\x2\x11B\x11C\x3\x2\x2"+
		"\x2\x11C\x11E\a\x30\x2\x2\x11D\x11F\t\x2\x2\x2\x11E\x11D\x3\x2\x2\x2\x11F"+
		"\x120\x3\x2\x2\x2\x120\x11E\x3\x2\x2\x2\x120\x121\x3\x2\x2\x2\x121\x44"+
		"\x3\x2\x2\x2\x122\x123\av\x2\x2\x123\x124\at\x2\x2\x124\x125\aw\x2\x2"+
		"\x125\x12C\ag\x2\x2\x126\x127\ah\x2\x2\x127\x128\a\x63\x2\x2\x128\x129"+
		"\an\x2\x2\x129\x12A\au\x2\x2\x12A\x12C\ag\x2\x2\x12B\x122\x3\x2\x2\x2"+
		"\x12B\x126\x3\x2\x2\x2\x12C\x46\x3\x2\x2\x2\x12D\x136\a$\x2\x2\x12E\x135"+
		"\n\x3\x2\x2\x12F\x132\a^\x2\x2\x130\x133\v\x2\x2\x2\x131\x133\a\x2\x2"+
		"\x3\x132\x130\x3\x2\x2\x2\x132\x131\x3\x2\x2\x2\x133\x135\x3\x2\x2\x2"+
		"\x134\x12E\x3\x2\x2\x2\x134\x12F\x3\x2\x2\x2\x135\x138\x3\x2\x2\x2\x136"+
		"\x134\x3\x2\x2\x2\x136\x137\x3\x2\x2\x2\x137\x139\x3\x2\x2\x2\x138\x136"+
		"\x3\x2\x2\x2\x139\x13A\a$\x2\x2\x13AH\x3\x2\x2\x2\x13B\x13C\a\x30\x2\x2"+
		"\x13CJ\x3\x2\x2\x2\x13D\x13E\a.\x2\x2\x13EL\x3\x2\x2\x2\x13F\x140\a?\x2"+
		"\x2\x140N\x3\x2\x2\x2\x141\x142\a,\x2\x2\x142P\x3\x2\x2\x2\x143\x144\a"+
		"\x31\x2\x2\x144R\x3\x2\x2\x2\x145\x146\a-\x2\x2\x146T\x3\x2\x2\x2\x147"+
		"\x148\a/\x2\x2\x148V\x3\x2\x2\x2\x149\x14A\a?\x2\x2\x14A\x14B\a?\x2\x2"+
		"\x14BX\x3\x2\x2\x2\x14C\x14D\a#\x2\x2\x14D\x14E\a?\x2\x2\x14EZ\x3\x2\x2"+
		"\x2\x14F\x150\a>\x2\x2\x150\\\x3\x2\x2\x2\x151\x152\a>\x2\x2\x152\x153"+
		"\a?\x2\x2\x153^\x3\x2\x2\x2\x154\x155\a@\x2\x2\x155`\x3\x2\x2\x2\x156"+
		"\x157\a@\x2\x2\x157\x158\a?\x2\x2\x158\x62\x3\x2\x2\x2\x159\x15A\a<\x2"+
		"\x2\x15A\x15B\a<\x2\x2\x15B\x64\x3\x2\x2\x2\x15C\x15D\a\x61\x2\x2\x15D"+
		"\x66\x3\x2\x2\x2\x15E\x15F\a\x31\x2\x2\x15F\x160\a\x31\x2\x2\x160\x164"+
		"\x3\x2\x2\x2\x161\x163\n\x4\x2\x2\x162\x161\x3\x2\x2\x2\x163\x166\x3\x2"+
		"\x2\x2\x164\x162\x3\x2\x2\x2\x164\x165\x3\x2\x2\x2\x165\x167\x3\x2\x2"+
		"\x2\x166\x164\x3\x2\x2\x2\x167\x168\b\x34\x2\x2\x168h\x3\x2\x2\x2\x169"+
		"\x16A\a\x31\x2\x2\x16A\x16B\a,\x2\x2\x16B\x16F\x3\x2\x2\x2\x16C\x16E\v"+
		"\x2\x2\x2\x16D\x16C\x3\x2\x2\x2\x16E\x171\x3\x2\x2\x2\x16F\x170\x3\x2"+
		"\x2\x2\x16F\x16D\x3\x2\x2\x2\x170\x172\x3\x2\x2\x2\x171\x16F\x3\x2\x2"+
		"\x2\x172\x173\a,\x2\x2\x173\x174\a\x31\x2\x2\x174\x175\x3\x2\x2\x2\x175"+
		"\x176\b\x35\x2\x2\x176j\x3\x2\x2\x2\x177\x179\a\x61\x2\x2\x178\x177\x3"+
		"\x2\x2\x2\x178\x179\x3\x2\x2\x2\x179\x17A\x3\x2\x2\x2\x17A\x17E\t\x5\x2"+
		"\x2\x17B\x17D\t\x6\x2\x2\x17C\x17B\x3\x2\x2\x2\x17D\x180\x3\x2\x2\x2\x17E"+
		"\x17C\x3\x2\x2\x2\x17E\x17F\x3\x2\x2\x2\x17Fl\x3\x2\x2\x2\x180\x17E\x3"+
		"\x2\x2\x2\x181\x183\t\a\x2\x2\x182\x181\x3\x2\x2\x2\x183\x184\x3\x2\x2"+
		"\x2\x184\x182\x3\x2\x2\x2\x184\x185\x3\x2\x2\x2\x185\x186\x3\x2\x2\x2"+
		"\x186\x187\b\x37\x2\x2\x187n\x3\x2\x2\x2\x188\x189\a=\x2\x2\x189p\x3\x2"+
		"\x2\x2\x18A\x18B\v\x2\x2\x2\x18Br\x3\x2\x2\x2\x11\x2\x10D\x112\x115\x11A"+
		"\x120\x12B\x132\x134\x136\x164\x16F\x178\x17E\x184\x3\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace HOPL.Grammar
