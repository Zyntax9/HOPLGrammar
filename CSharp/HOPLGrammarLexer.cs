//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.1-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from HOPLGrammar.g4 by ANTLR 4.6.1-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace HOPL.Grammar {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.1-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class HOPLGrammarLexer : Lexer {
	public const int
		NAMESPACE_KW=1, IMPORT_KW=2, ALIAS_KW=3, REQUIRED_KW=4, CONSTANT_KW=5, 
		RETURN_KW=6, AWAIT_KW=7, TRIGGER_KW=8, HANDLER_KW=9, LIST_KW=10, TUPLE_KW=11, 
		IF_KW=12, ELSE_KW=13, FOR_KW=14, FOREACH_KW=15, IN_KW=16, WHILE_KW=17, 
		NOT_KW=18, AND_KW=19, OR_KW=20, BOX_OPEN=21, BOX_CLOSE=22, CURLY_OPEN=23, 
		CURLY_CLOSE=24, PARAN_OPEN=25, PARAN_CLOSE=26, INTEGER=27, FLOAT=28, BOOLEAN=29, 
		STRING=30, INTEGER_VAL=31, FLOAT_VAL=32, BOOLEAN_VAL=33, STRING_VAL=34, 
		DOT=35, COMMA=36, ASSIGN=37, MULT=38, DIV=39, PLUS=40, MINUS=41, EQ=42, 
		NEQ=43, LESS=44, LEQ=45, GRT=46, GEQ=47, CONCAT=48, UIGNORE=49, SL_COMMENT=50, 
		ML_COMMENT=51, ID=52, WS=53, TERM=54, ERR=55;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"NAMESPACE_KW", "IMPORT_KW", "ALIAS_KW", "REQUIRED_KW", "CONSTANT_KW", 
		"RETURN_KW", "AWAIT_KW", "TRIGGER_KW", "HANDLER_KW", "LIST_KW", "TUPLE_KW", 
		"IF_KW", "ELSE_KW", "FOR_KW", "FOREACH_KW", "IN_KW", "WHILE_KW", "NOT_KW", 
		"AND_KW", "OR_KW", "BOX_OPEN", "BOX_CLOSE", "CURLY_OPEN", "CURLY_CLOSE", 
		"PARAN_OPEN", "PARAN_CLOSE", "INTEGER", "FLOAT", "BOOLEAN", "STRING", 
		"INTEGER_VAL", "FLOAT_VAL", "BOOLEAN_VAL", "STRING_VAL", "DOT", "COMMA", 
		"ASSIGN", "MULT", "DIV", "PLUS", "MINUS", "EQ", "NEQ", "LESS", "LEQ", 
		"GRT", "GEQ", "CONCAT", "UIGNORE", "SL_COMMENT", "ML_COMMENT", "ID", "WS", 
		"TERM", "ERR"
	};


	public HOPLGrammarLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'namespace'", "'import'", "'as'", "'required'", "'const'", "'return'", 
		"'await'", "'trigger'", "'handle'", "'list'", "'tuple'", "'if'", "'else'", 
		"'for'", "'foreach'", "'in'", "'while'", "'not'", "'and'", "'or'", "'['", 
		"']'", "'{'", "'}'", "'('", "')'", "'int'", "'float'", "'bool'", "'string'", 
		null, null, null, null, "'.'", "','", "'='", "'*'", "'/'", "'+'", "'-'", 
		"'=='", "'!='", "'<'", "'<='", "'>'", "'>='", "'::'", "'_'", null, null, 
		null, null, "';'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "NAMESPACE_KW", "IMPORT_KW", "ALIAS_KW", "REQUIRED_KW", "CONSTANT_KW", 
		"RETURN_KW", "AWAIT_KW", "TRIGGER_KW", "HANDLER_KW", "LIST_KW", "TUPLE_KW", 
		"IF_KW", "ELSE_KW", "FOR_KW", "FOREACH_KW", "IN_KW", "WHILE_KW", "NOT_KW", 
		"AND_KW", "OR_KW", "BOX_OPEN", "BOX_CLOSE", "CURLY_OPEN", "CURLY_CLOSE", 
		"PARAN_OPEN", "PARAN_CLOSE", "INTEGER", "FLOAT", "BOOLEAN", "STRING", 
		"INTEGER_VAL", "FLOAT_VAL", "BOOLEAN_VAL", "STRING_VAL", "DOT", "COMMA", 
		"ASSIGN", "MULT", "DIV", "PLUS", "MINUS", "EQ", "NEQ", "LESS", "LEQ", 
		"GRT", "GEQ", "CONCAT", "UIGNORE", "SL_COMMENT", "ML_COMMENT", "ID", "WS", 
		"TERM", "ERR"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "HOPLGrammar.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x39\x187\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t"+
		")\x4*\t*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x4\x31\t\x31"+
		"\x4\x32\t\x32\x4\x33\t\x33\x4\x34\t\x34\x4\x35\t\x35\x4\x36\t\x36\x4\x37"+
		"\t\x37\x4\x38\t\x38\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3"+
		"\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4"+
		"\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3"+
		"\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3"+
		"\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3"+
		"\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3"+
		"\f\x3\f\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF"+
		"\x3\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x11"+
		"\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13"+
		"\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x16"+
		"\x3\x16\x3\x17\x3\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B"+
		"\x3\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D"+
		"\x3\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3\x1F"+
		"\x3\x1F\x3\x1F\x3\x1F\x3 \x5 \x107\n \x3 \x6 \x10A\n \r \xE \x10B\x3!"+
		"\x5!\x10F\n!\x3!\x6!\x112\n!\r!\xE!\x113\x3!\x3!\x6!\x118\n!\r!\xE!\x119"+
		"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x5\"\x125\n\"\x3#\x3#\x3"+
		"#\x3#\x3#\x5#\x12C\n#\a#\x12E\n#\f#\xE#\x131\v#\x3#\x3#\x3$\x3$\x3%\x3"+
		"%\x3&\x3&\x3\'\x3\'\x3(\x3(\x3)\x3)\x3*\x3*\x3+\x3+\x3+\x3,\x3,\x3,\x3"+
		"-\x3-\x3.\x3.\x3.\x3/\x3/\x3\x30\x3\x30\x3\x30\x3\x31\x3\x31\x3\x31\x3"+
		"\x32\x3\x32\x3\x33\x3\x33\x3\x33\x3\x33\a\x33\x15C\n\x33\f\x33\xE\x33"+
		"\x15F\v\x33\x3\x33\x3\x33\x3\x34\x3\x34\x3\x34\x3\x34\a\x34\x167\n\x34"+
		"\f\x34\xE\x34\x16A\v\x34\x3\x34\x3\x34\x3\x34\x3\x34\x3\x34\x3\x35\x5"+
		"\x35\x172\n\x35\x3\x35\x5\x35\x175\n\x35\x3\x35\a\x35\x178\n\x35\f\x35"+
		"\xE\x35\x17B\v\x35\x3\x36\x6\x36\x17E\n\x36\r\x36\xE\x36\x17F\x3\x36\x3"+
		"\x36\x3\x37\x3\x37\x3\x38\x3\x38\x3\x168\x2\x2\x39\x3\x2\x3\x5\x2\x4\a"+
		"\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2"+
		"\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'"+
		"\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C"+
		"\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2"+
		"%I\x2&K\x2\'M\x2(O\x2)Q\x2*S\x2+U\x2,W\x2-Y\x2.[\x2/]\x2\x30_\x2\x31\x61"+
		"\x2\x32\x63\x2\x33\x65\x2\x34g\x2\x35i\x2\x36k\x2\x37m\x2\x38o\x2\x39"+
		"\x3\x2\b\x3\x2\x32;\x4\x2$$^^\x4\x2\f\f\xF\xF\x5\x2\x43\\\x63|\x102\x180"+
		"\a\x2\x32;\x43\\\x61\x61\x63|\x102\x180\x5\x2\v\f\xF\xF\"\"\x194\x2\x3"+
		"\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v"+
		"\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2"+
		"\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2"+
		"\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2"+
		"\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2"+
		"\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2"+
		"\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2"+
		"\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2"+
		"\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2"+
		"\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3"+
		"\x2\x2\x2\x2U\x3\x2\x2\x2\x2W\x3\x2\x2\x2\x2Y\x3\x2\x2\x2\x2[\x3\x2\x2"+
		"\x2\x2]\x3\x2\x2\x2\x2_\x3\x2\x2\x2\x2\x61\x3\x2\x2\x2\x2\x63\x3\x2\x2"+
		"\x2\x2\x65\x3\x2\x2\x2\x2g\x3\x2\x2\x2\x2i\x3\x2\x2\x2\x2k\x3\x2\x2\x2"+
		"\x2m\x3\x2\x2\x2\x2o\x3\x2\x2\x2\x3q\x3\x2\x2\x2\x5{\x3\x2\x2\x2\a\x82"+
		"\x3\x2\x2\x2\t\x85\x3\x2\x2\x2\v\x8E\x3\x2\x2\x2\r\x94\x3\x2\x2\x2\xF"+
		"\x9B\x3\x2\x2\x2\x11\xA1\x3\x2\x2\x2\x13\xA9\x3\x2\x2\x2\x15\xB0\x3\x2"+
		"\x2\x2\x17\xB5\x3\x2\x2\x2\x19\xBB\x3\x2\x2\x2\x1B\xBE\x3\x2\x2\x2\x1D"+
		"\xC3\x3\x2\x2\x2\x1F\xC7\x3\x2\x2\x2!\xCF\x3\x2\x2\x2#\xD2\x3\x2\x2\x2"+
		"%\xD8\x3\x2\x2\x2\'\xDC\x3\x2\x2\x2)\xE0\x3\x2\x2\x2+\xE3\x3\x2\x2\x2"+
		"-\xE5\x3\x2\x2\x2/\xE7\x3\x2\x2\x2\x31\xE9\x3\x2\x2\x2\x33\xEB\x3\x2\x2"+
		"\x2\x35\xED\x3\x2\x2\x2\x37\xEF\x3\x2\x2\x2\x39\xF3\x3\x2\x2\x2;\xF9\x3"+
		"\x2\x2\x2=\xFE\x3\x2\x2\x2?\x106\x3\x2\x2\x2\x41\x10E\x3\x2\x2\x2\x43"+
		"\x124\x3\x2\x2\x2\x45\x126\x3\x2\x2\x2G\x134\x3\x2\x2\x2I\x136\x3\x2\x2"+
		"\x2K\x138\x3\x2\x2\x2M\x13A\x3\x2\x2\x2O\x13C\x3\x2\x2\x2Q\x13E\x3\x2"+
		"\x2\x2S\x140\x3\x2\x2\x2U\x142\x3\x2\x2\x2W\x145\x3\x2\x2\x2Y\x148\x3"+
		"\x2\x2\x2[\x14A\x3\x2\x2\x2]\x14D\x3\x2\x2\x2_\x14F\x3\x2\x2\x2\x61\x152"+
		"\x3\x2\x2\x2\x63\x155\x3\x2\x2\x2\x65\x157\x3\x2\x2\x2g\x162\x3\x2\x2"+
		"\x2i\x171\x3\x2\x2\x2k\x17D\x3\x2\x2\x2m\x183\x3\x2\x2\x2o\x185\x3\x2"+
		"\x2\x2qr\ap\x2\x2rs\a\x63\x2\x2st\ao\x2\x2tu\ag\x2\x2uv\au\x2\x2vw\ar"+
		"\x2\x2wx\a\x63\x2\x2xy\a\x65\x2\x2yz\ag\x2\x2z\x4\x3\x2\x2\x2{|\ak\x2"+
		"\x2|}\ao\x2\x2}~\ar\x2\x2~\x7F\aq\x2\x2\x7F\x80\at\x2\x2\x80\x81\av\x2"+
		"\x2\x81\x6\x3\x2\x2\x2\x82\x83\a\x63\x2\x2\x83\x84\au\x2\x2\x84\b\x3\x2"+
		"\x2\x2\x85\x86\at\x2\x2\x86\x87\ag\x2\x2\x87\x88\as\x2\x2\x88\x89\aw\x2"+
		"\x2\x89\x8A\ak\x2\x2\x8A\x8B\at\x2\x2\x8B\x8C\ag\x2\x2\x8C\x8D\a\x66\x2"+
		"\x2\x8D\n\x3\x2\x2\x2\x8E\x8F\a\x65\x2\x2\x8F\x90\aq\x2\x2\x90\x91\ap"+
		"\x2\x2\x91\x92\au\x2\x2\x92\x93\av\x2\x2\x93\f\x3\x2\x2\x2\x94\x95\at"+
		"\x2\x2\x95\x96\ag\x2\x2\x96\x97\av\x2\x2\x97\x98\aw\x2\x2\x98\x99\at\x2"+
		"\x2\x99\x9A\ap\x2\x2\x9A\xE\x3\x2\x2\x2\x9B\x9C\a\x63\x2\x2\x9C\x9D\a"+
		"y\x2\x2\x9D\x9E\a\x63\x2\x2\x9E\x9F\ak\x2\x2\x9F\xA0\av\x2\x2\xA0\x10"+
		"\x3\x2\x2\x2\xA1\xA2\av\x2\x2\xA2\xA3\at\x2\x2\xA3\xA4\ak\x2\x2\xA4\xA5"+
		"\ai\x2\x2\xA5\xA6\ai\x2\x2\xA6\xA7\ag\x2\x2\xA7\xA8\at\x2\x2\xA8\x12\x3"+
		"\x2\x2\x2\xA9\xAA\aj\x2\x2\xAA\xAB\a\x63\x2\x2\xAB\xAC\ap\x2\x2\xAC\xAD"+
		"\a\x66\x2\x2\xAD\xAE\an\x2\x2\xAE\xAF\ag\x2\x2\xAF\x14\x3\x2\x2\x2\xB0"+
		"\xB1\an\x2\x2\xB1\xB2\ak\x2\x2\xB2\xB3\au\x2\x2\xB3\xB4\av\x2\x2\xB4\x16"+
		"\x3\x2\x2\x2\xB5\xB6\av\x2\x2\xB6\xB7\aw\x2\x2\xB7\xB8\ar\x2\x2\xB8\xB9"+
		"\an\x2\x2\xB9\xBA\ag\x2\x2\xBA\x18\x3\x2\x2\x2\xBB\xBC\ak\x2\x2\xBC\xBD"+
		"\ah\x2\x2\xBD\x1A\x3\x2\x2\x2\xBE\xBF\ag\x2\x2\xBF\xC0\an\x2\x2\xC0\xC1"+
		"\au\x2\x2\xC1\xC2\ag\x2\x2\xC2\x1C\x3\x2\x2\x2\xC3\xC4\ah\x2\x2\xC4\xC5"+
		"\aq\x2\x2\xC5\xC6\at\x2\x2\xC6\x1E\x3\x2\x2\x2\xC7\xC8\ah\x2\x2\xC8\xC9"+
		"\aq\x2\x2\xC9\xCA\at\x2\x2\xCA\xCB\ag\x2\x2\xCB\xCC\a\x63\x2\x2\xCC\xCD"+
		"\a\x65\x2\x2\xCD\xCE\aj\x2\x2\xCE \x3\x2\x2\x2\xCF\xD0\ak\x2\x2\xD0\xD1"+
		"\ap\x2\x2\xD1\"\x3\x2\x2\x2\xD2\xD3\ay\x2\x2\xD3\xD4\aj\x2\x2\xD4\xD5"+
		"\ak\x2\x2\xD5\xD6\an\x2\x2\xD6\xD7\ag\x2\x2\xD7$\x3\x2\x2\x2\xD8\xD9\a"+
		"p\x2\x2\xD9\xDA\aq\x2\x2\xDA\xDB\av\x2\x2\xDB&\x3\x2\x2\x2\xDC\xDD\a\x63"+
		"\x2\x2\xDD\xDE\ap\x2\x2\xDE\xDF\a\x66\x2\x2\xDF(\x3\x2\x2\x2\xE0\xE1\a"+
		"q\x2\x2\xE1\xE2\at\x2\x2\xE2*\x3\x2\x2\x2\xE3\xE4\a]\x2\x2\xE4,\x3\x2"+
		"\x2\x2\xE5\xE6\a_\x2\x2\xE6.\x3\x2\x2\x2\xE7\xE8\a}\x2\x2\xE8\x30\x3\x2"+
		"\x2\x2\xE9\xEA\a\x7F\x2\x2\xEA\x32\x3\x2\x2\x2\xEB\xEC\a*\x2\x2\xEC\x34"+
		"\x3\x2\x2\x2\xED\xEE\a+\x2\x2\xEE\x36\x3\x2\x2\x2\xEF\xF0\ak\x2\x2\xF0"+
		"\xF1\ap\x2\x2\xF1\xF2\av\x2\x2\xF2\x38\x3\x2\x2\x2\xF3\xF4\ah\x2\x2\xF4"+
		"\xF5\an\x2\x2\xF5\xF6\aq\x2\x2\xF6\xF7\a\x63\x2\x2\xF7\xF8\av\x2\x2\xF8"+
		":\x3\x2\x2\x2\xF9\xFA\a\x64\x2\x2\xFA\xFB\aq\x2\x2\xFB\xFC\aq\x2\x2\xFC"+
		"\xFD\an\x2\x2\xFD<\x3\x2\x2\x2\xFE\xFF\au\x2\x2\xFF\x100\av\x2\x2\x100"+
		"\x101\at\x2\x2\x101\x102\ak\x2\x2\x102\x103\ap\x2\x2\x103\x104\ai\x2\x2"+
		"\x104>\x3\x2\x2\x2\x105\x107\a/\x2\x2\x106\x105\x3\x2\x2\x2\x106\x107"+
		"\x3\x2\x2\x2\x107\x109\x3\x2\x2\x2\x108\x10A\t\x2\x2\x2\x109\x108\x3\x2"+
		"\x2\x2\x10A\x10B\x3\x2\x2\x2\x10B\x109\x3\x2\x2\x2\x10B\x10C\x3\x2\x2"+
		"\x2\x10C@\x3\x2\x2\x2\x10D\x10F\a/\x2\x2\x10E\x10D\x3\x2\x2\x2\x10E\x10F"+
		"\x3\x2\x2\x2\x10F\x111\x3\x2\x2\x2\x110\x112\t\x2\x2\x2\x111\x110\x3\x2"+
		"\x2\x2\x112\x113\x3\x2\x2\x2\x113\x111\x3\x2\x2\x2\x113\x114\x3\x2\x2"+
		"\x2\x114\x115\x3\x2\x2\x2\x115\x117\a\x30\x2\x2\x116\x118\t\x2\x2\x2\x117"+
		"\x116\x3\x2\x2\x2\x118\x119\x3\x2\x2\x2\x119\x117\x3\x2\x2\x2\x119\x11A"+
		"\x3\x2\x2\x2\x11A\x42\x3\x2\x2\x2\x11B\x11C\av\x2\x2\x11C\x11D\at\x2\x2"+
		"\x11D\x11E\aw\x2\x2\x11E\x125\ag\x2\x2\x11F\x120\ah\x2\x2\x120\x121\a"+
		"\x63\x2\x2\x121\x122\an\x2\x2\x122\x123\au\x2\x2\x123\x125\ag\x2\x2\x124"+
		"\x11B\x3\x2\x2\x2\x124\x11F\x3\x2\x2\x2\x125\x44\x3\x2\x2\x2\x126\x12F"+
		"\a$\x2\x2\x127\x12E\n\x3\x2\x2\x128\x12B\a^\x2\x2\x129\x12C\v\x2\x2\x2"+
		"\x12A\x12C\a\x2\x2\x3\x12B\x129\x3\x2\x2\x2\x12B\x12A\x3\x2\x2\x2\x12C"+
		"\x12E\x3\x2\x2\x2\x12D\x127\x3\x2\x2\x2\x12D\x128\x3\x2\x2\x2\x12E\x131"+
		"\x3\x2\x2\x2\x12F\x12D\x3\x2\x2\x2\x12F\x130\x3\x2\x2\x2\x130\x132\x3"+
		"\x2\x2\x2\x131\x12F\x3\x2\x2\x2\x132\x133\a$\x2\x2\x133\x46\x3\x2\x2\x2"+
		"\x134\x135\a\x30\x2\x2\x135H\x3\x2\x2\x2\x136\x137\a.\x2\x2\x137J\x3\x2"+
		"\x2\x2\x138\x139\a?\x2\x2\x139L\x3\x2\x2\x2\x13A\x13B\a,\x2\x2\x13BN\x3"+
		"\x2\x2\x2\x13C\x13D\a\x31\x2\x2\x13DP\x3\x2\x2\x2\x13E\x13F\a-\x2\x2\x13F"+
		"R\x3\x2\x2\x2\x140\x141\a/\x2\x2\x141T\x3\x2\x2\x2\x142\x143\a?\x2\x2"+
		"\x143\x144\a?\x2\x2\x144V\x3\x2\x2\x2\x145\x146\a#\x2\x2\x146\x147\a?"+
		"\x2\x2\x147X\x3\x2\x2\x2\x148\x149\a>\x2\x2\x149Z\x3\x2\x2\x2\x14A\x14B"+
		"\a>\x2\x2\x14B\x14C\a?\x2\x2\x14C\\\x3\x2\x2\x2\x14D\x14E\a@\x2\x2\x14E"+
		"^\x3\x2\x2\x2\x14F\x150\a@\x2\x2\x150\x151\a?\x2\x2\x151`\x3\x2\x2\x2"+
		"\x152\x153\a<\x2\x2\x153\x154\a<\x2\x2\x154\x62\x3\x2\x2\x2\x155\x156"+
		"\a\x61\x2\x2\x156\x64\x3\x2\x2\x2\x157\x158\a\x31\x2\x2\x158\x159\a\x31"+
		"\x2\x2\x159\x15D\x3\x2\x2\x2\x15A\x15C\n\x4\x2\x2\x15B\x15A\x3\x2\x2\x2"+
		"\x15C\x15F\x3\x2\x2\x2\x15D\x15B\x3\x2\x2\x2\x15D\x15E\x3\x2\x2\x2\x15E"+
		"\x160\x3\x2\x2\x2\x15F\x15D\x3\x2\x2\x2\x160\x161\b\x33\x2\x2\x161\x66"+
		"\x3\x2\x2\x2\x162\x163\a\x31\x2\x2\x163\x164\a,\x2\x2\x164\x168\x3\x2"+
		"\x2\x2\x165\x167\v\x2\x2\x2\x166\x165\x3\x2\x2\x2\x167\x16A\x3\x2\x2\x2"+
		"\x168\x169\x3\x2\x2\x2\x168\x166\x3\x2\x2\x2\x169\x16B\x3\x2\x2\x2\x16A"+
		"\x168\x3\x2\x2\x2\x16B\x16C\a,\x2\x2\x16C\x16D\a\x31\x2\x2\x16D\x16E\x3"+
		"\x2\x2\x2\x16E\x16F\b\x34\x2\x2\x16Fh\x3\x2\x2\x2\x170\x172\a\x61\x2\x2"+
		"\x171\x170\x3\x2\x2\x2\x171\x172\x3\x2\x2\x2\x172\x174\x3\x2\x2\x2\x173"+
		"\x175\t\x5\x2\x2\x174\x173\x3\x2\x2\x2\x175\x179\x3\x2\x2\x2\x176\x178"+
		"\t\x6\x2\x2\x177\x176\x3\x2\x2\x2\x178\x17B\x3\x2\x2\x2\x179\x177\x3\x2"+
		"\x2\x2\x179\x17A\x3\x2\x2\x2\x17Aj\x3\x2\x2\x2\x17B\x179\x3\x2\x2\x2\x17C"+
		"\x17E\t\a\x2\x2\x17D\x17C\x3\x2\x2\x2\x17E\x17F\x3\x2\x2\x2\x17F\x17D"+
		"\x3\x2\x2\x2\x17F\x180\x3\x2\x2\x2\x180\x181\x3\x2\x2\x2\x181\x182\b\x36"+
		"\x2\x2\x182l\x3\x2\x2\x2\x183\x184\a=\x2\x2\x184n\x3\x2\x2\x2\x185\x186"+
		"\v\x2\x2\x2\x186p\x3\x2\x2\x2\x13\x2\x106\x10B\x10E\x113\x119\x124\x12B"+
		"\x12D\x12F\x15D\x168\x171\x174\x177\x179\x17F\x3\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace HOPL.Grammar
