//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.1-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from HOPLGrammar.g4 by ANTLR 4.6.1-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace HOPL.Grammar {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="HOPLGrammarParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.1-SNAPSHOT")]
[System.CLSCompliant(false)]
public interface IHOPLGrammarVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>floatType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloatType([NotNull] HOPLGrammarParser.FloatTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>intType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntType([NotNull] HOPLGrammarParser.IntTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>stringType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringType([NotNull] HOPLGrammarParser.StringTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>tupleType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTupleType([NotNull] HOPLGrammarParser.TupleTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>triggerType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTriggerType([NotNull] HOPLGrammarParser.TriggerTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>functionType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionType([NotNull] HOPLGrammarParser.FunctionTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>listType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitListType([NotNull] HOPLGrammarParser.ListTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>boolType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolType([NotNull] HOPLGrammarParser.BoolTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>orExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrExpr([NotNull] HOPLGrammarParser.OrExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>awaitExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAwaitExpr([NotNull] HOPLGrammarParser.AwaitExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>multExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultExpr([NotNull] HOPLGrammarParser.MultExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>valExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValExpr([NotNull] HOPLGrammarParser.ValExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>concatExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConcatExpr([NotNull] HOPLGrammarParser.ConcatExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>indexExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexExpr([NotNull] HOPLGrammarParser.IndexExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>varExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarExpr([NotNull] HOPLGrammarParser.VarExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>notExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotExpr([NotNull] HOPLGrammarParser.NotExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>addiExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddiExpr([NotNull] HOPLGrammarParser.AddiExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>negExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNegExpr([NotNull] HOPLGrammarParser.NegExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>compExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompExpr([NotNull] HOPLGrammarParser.CompExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>callExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCallExpr([NotNull] HOPLGrammarParser.CallExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>tupleExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTupleExpr([NotNull] HOPLGrammarParser.TupleExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>paranExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParanExpr([NotNull] HOPLGrammarParser.ParanExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>listExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitListExpr([NotNull] HOPLGrammarParser.ListExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>andExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndExpr([NotNull] HOPLGrammarParser.AndExprContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>intVal</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeVal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntVal([NotNull] HOPLGrammarParser.IntValContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>stringVal</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeVal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringVal([NotNull] HOPLGrammarParser.StringValContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>floatVal</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeVal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloatVal([NotNull] HOPLGrammarParser.FloatValContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>boolVal</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeVal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolVal([NotNull] HOPLGrammarParser.BoolValContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>ifStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStat([NotNull] HOPLGrammarParser.IfStatContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>decStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecStat([NotNull] HOPLGrammarParser.DecStatContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>unpackStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnpackStat([NotNull] HOPLGrammarParser.UnpackStatContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>exprStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprStat([NotNull] HOPLGrammarParser.ExprStatContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>returnStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStat([NotNull] HOPLGrammarParser.ReturnStatContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>foreachStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForeachStat([NotNull] HOPLGrammarParser.ForeachStatContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>assignStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignStat([NotNull] HOPLGrammarParser.AssignStatContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>forStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStat([NotNull] HOPLGrammarParser.ForStatContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>whileStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStat([NotNull] HOPLGrammarParser.WhileStatContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>ignoreUnpacked</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.unpacked"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIgnoreUnpacked([NotNull] HOPLGrammarParser.IgnoreUnpackedContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>idUnpacked</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.unpacked"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdUnpacked([NotNull] HOPLGrammarParser.IdUnpackedContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>decUnpacked</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.unpacked"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecUnpacked([NotNull] HOPLGrammarParser.DecUnpackedContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>handlerDecNamespace</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.namespacePart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHandlerDecNamespace([NotNull] HOPLGrammarParser.HandlerDecNamespaceContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>globalDecNamespace</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.namespacePart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobalDecNamespace([NotNull] HOPLGrammarParser.GlobalDecNamespaceContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>functionDecNamespace</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.namespacePart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDecNamespace([NotNull] HOPLGrammarParser.FunctionDecNamespaceContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompileUnit([NotNull] HOPLGrammarParser.CompileUnitContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.namespaceDec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespaceDec([NotNull] HOPLGrammarParser.NamespaceDecContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.namespaceBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespaceBody([NotNull] HOPLGrammarParser.NamespaceBodyContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.namespacePart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespacePart([NotNull] HOPLGrammarParser.NamespacePartContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.namespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespace([NotNull] HOPLGrammarParser.NamespaceContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.importNamespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportNamespace([NotNull] HOPLGrammarParser.ImportNamespaceContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier([NotNull] HOPLGrammarParser.IdentifierContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgs([NotNull] HOPLGrammarParser.ArgsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody([NotNull] HOPLGrammarParser.BodyContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.functionDec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDec([NotNull] HOPLGrammarParser.FunctionDecContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.handlerDec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHandlerDec([NotNull] HOPLGrammarParser.HandlerDecContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCall([NotNull] HOPLGrammarParser.CallContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStat([NotNull] HOPLGrammarParser.StatContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr([NotNull] HOPLGrammarParser.ExprContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.await"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAwait([NotNull] HOPLGrammarParser.AwaitContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf([NotNull] HOPLGrammarParser.IfContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.elseIf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseIf([NotNull] HOPLGrammarParser.ElseIfContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElse([NotNull] HOPLGrammarParser.ElseContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.while"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhile([NotNull] HOPLGrammarParser.WhileContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.for"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFor([NotNull] HOPLGrammarParser.ForContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.foreach"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForeach([NotNull] HOPLGrammarParser.ForeachContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArg([NotNull] HOPLGrammarParser.ArgContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.varDec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarDec([NotNull] HOPLGrammarParser.VarDecContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.globalDec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobalDec([NotNull] HOPLGrammarParser.GlobalDecContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.assign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssign([NotNull] HOPLGrammarParser.AssignContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.unpack"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnpack([NotNull] HOPLGrammarParser.UnpackContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.unpacked"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnpacked([NotNull] HOPLGrammarParser.UnpackedContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturn([NotNull] HOPLGrammarParser.ReturnContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeName([NotNull] HOPLGrammarParser.TypeNameContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="HOPLGrammarParser.typeVal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeVal([NotNull] HOPLGrammarParser.TypeValContext context);
}
} // namespace HOPL.Grammar
