//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.1-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from HOPLGrammar.g4 by ANTLR 4.6.1-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace HOPLGrammar {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="HOPLGrammarParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.1-SNAPSHOT")]
[System.CLSCompliant(false)]
public interface IHOPLGrammarListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>floatType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloatType([NotNull] HOPLGrammarParser.FloatTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>floatType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloatType([NotNull] HOPLGrammarParser.FloatTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>intType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntType([NotNull] HOPLGrammarParser.IntTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>intType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntType([NotNull] HOPLGrammarParser.IntTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>stringType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringType([NotNull] HOPLGrammarParser.StringTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stringType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringType([NotNull] HOPLGrammarParser.StringTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>tupleType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupleType([NotNull] HOPLGrammarParser.TupleTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>tupleType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupleType([NotNull] HOPLGrammarParser.TupleTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>triggerType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTriggerType([NotNull] HOPLGrammarParser.TriggerTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>triggerType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTriggerType([NotNull] HOPLGrammarParser.TriggerTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>functionType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionType([NotNull] HOPLGrammarParser.FunctionTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>functionType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionType([NotNull] HOPLGrammarParser.FunctionTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>listType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListType([NotNull] HOPLGrammarParser.ListTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>listType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListType([NotNull] HOPLGrammarParser.ListTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>boolType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolType([NotNull] HOPLGrammarParser.BoolTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolType([NotNull] HOPLGrammarParser.BoolTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>orExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrExpr([NotNull] HOPLGrammarParser.OrExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>orExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrExpr([NotNull] HOPLGrammarParser.OrExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>awaitExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAwaitExpr([NotNull] HOPLGrammarParser.AwaitExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>awaitExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAwaitExpr([NotNull] HOPLGrammarParser.AwaitExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>multExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultExpr([NotNull] HOPLGrammarParser.MultExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>multExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultExpr([NotNull] HOPLGrammarParser.MultExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>valExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValExpr([NotNull] HOPLGrammarParser.ValExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>valExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValExpr([NotNull] HOPLGrammarParser.ValExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>concatExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConcatExpr([NotNull] HOPLGrammarParser.ConcatExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>concatExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConcatExpr([NotNull] HOPLGrammarParser.ConcatExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>indexExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexExpr([NotNull] HOPLGrammarParser.IndexExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>indexExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexExpr([NotNull] HOPLGrammarParser.IndexExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>varExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarExpr([NotNull] HOPLGrammarParser.VarExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>varExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarExpr([NotNull] HOPLGrammarParser.VarExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>notExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotExpr([NotNull] HOPLGrammarParser.NotExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>notExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotExpr([NotNull] HOPLGrammarParser.NotExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>addiExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddiExpr([NotNull] HOPLGrammarParser.AddiExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>addiExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddiExpr([NotNull] HOPLGrammarParser.AddiExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>negExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNegExpr([NotNull] HOPLGrammarParser.NegExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>negExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNegExpr([NotNull] HOPLGrammarParser.NegExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>compExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompExpr([NotNull] HOPLGrammarParser.CompExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>compExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompExpr([NotNull] HOPLGrammarParser.CompExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>callExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCallExpr([NotNull] HOPLGrammarParser.CallExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>callExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCallExpr([NotNull] HOPLGrammarParser.CallExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>tupleExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupleExpr([NotNull] HOPLGrammarParser.TupleExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>tupleExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupleExpr([NotNull] HOPLGrammarParser.TupleExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>paranExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParanExpr([NotNull] HOPLGrammarParser.ParanExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>paranExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParanExpr([NotNull] HOPLGrammarParser.ParanExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>listExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListExpr([NotNull] HOPLGrammarParser.ListExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>listExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListExpr([NotNull] HOPLGrammarParser.ListExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>andExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAndExpr([NotNull] HOPLGrammarParser.AndExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>andExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAndExpr([NotNull] HOPLGrammarParser.AndExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>intVal</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeVal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntVal([NotNull] HOPLGrammarParser.IntValContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>intVal</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeVal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntVal([NotNull] HOPLGrammarParser.IntValContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>stringVal</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeVal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringVal([NotNull] HOPLGrammarParser.StringValContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stringVal</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeVal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringVal([NotNull] HOPLGrammarParser.StringValContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>floatVal</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeVal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloatVal([NotNull] HOPLGrammarParser.FloatValContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>floatVal</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeVal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloatVal([NotNull] HOPLGrammarParser.FloatValContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>boolVal</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeVal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolVal([NotNull] HOPLGrammarParser.BoolValContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolVal</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeVal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolVal([NotNull] HOPLGrammarParser.BoolValContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ifStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStat([NotNull] HOPLGrammarParser.IfStatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ifStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStat([NotNull] HOPLGrammarParser.IfStatContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>decStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecStat([NotNull] HOPLGrammarParser.DecStatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>decStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecStat([NotNull] HOPLGrammarParser.DecStatContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>unpackStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnpackStat([NotNull] HOPLGrammarParser.UnpackStatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>unpackStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnpackStat([NotNull] HOPLGrammarParser.UnpackStatContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>exprStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprStat([NotNull] HOPLGrammarParser.ExprStatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>exprStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprStat([NotNull] HOPLGrammarParser.ExprStatContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>returnStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStat([NotNull] HOPLGrammarParser.ReturnStatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>returnStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStat([NotNull] HOPLGrammarParser.ReturnStatContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>foreachStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForeachStat([NotNull] HOPLGrammarParser.ForeachStatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>foreachStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForeachStat([NotNull] HOPLGrammarParser.ForeachStatContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>assignStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignStat([NotNull] HOPLGrammarParser.AssignStatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignStat([NotNull] HOPLGrammarParser.AssignStatContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>forStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStat([NotNull] HOPLGrammarParser.ForStatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>forStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStat([NotNull] HOPLGrammarParser.ForStatContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>whileStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStat([NotNull] HOPLGrammarParser.WhileStatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>whileStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStat([NotNull] HOPLGrammarParser.WhileStatContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ignoreUnpacked</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.unpacked"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIgnoreUnpacked([NotNull] HOPLGrammarParser.IgnoreUnpackedContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ignoreUnpacked</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.unpacked"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIgnoreUnpacked([NotNull] HOPLGrammarParser.IgnoreUnpackedContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>idUnpacked</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.unpacked"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdUnpacked([NotNull] HOPLGrammarParser.IdUnpackedContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>idUnpacked</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.unpacked"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdUnpacked([NotNull] HOPLGrammarParser.IdUnpackedContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>decUnpacked</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.unpacked"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecUnpacked([NotNull] HOPLGrammarParser.DecUnpackedContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>decUnpacked</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.unpacked"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecUnpacked([NotNull] HOPLGrammarParser.DecUnpackedContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>handlerDecNamespace</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.namespacePart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHandlerDecNamespace([NotNull] HOPLGrammarParser.HandlerDecNamespaceContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>handlerDecNamespace</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.namespacePart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHandlerDecNamespace([NotNull] HOPLGrammarParser.HandlerDecNamespaceContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>globalDecNamespace</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.namespacePart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGlobalDecNamespace([NotNull] HOPLGrammarParser.GlobalDecNamespaceContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>globalDecNamespace</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.namespacePart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGlobalDecNamespace([NotNull] HOPLGrammarParser.GlobalDecNamespaceContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>functionDecNamespace</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.namespacePart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDecNamespace([NotNull] HOPLGrammarParser.FunctionDecNamespaceContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>functionDecNamespace</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.namespacePart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDecNamespace([NotNull] HOPLGrammarParser.FunctionDecNamespaceContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompileUnit([NotNull] HOPLGrammarParser.CompileUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompileUnit([NotNull] HOPLGrammarParser.CompileUnitContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.namespaceDec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespaceDec([NotNull] HOPLGrammarParser.NamespaceDecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.namespaceDec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespaceDec([NotNull] HOPLGrammarParser.NamespaceDecContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.namespaceBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespaceBody([NotNull] HOPLGrammarParser.NamespaceBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.namespaceBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespaceBody([NotNull] HOPLGrammarParser.NamespaceBodyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.namespacePart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespacePart([NotNull] HOPLGrammarParser.NamespacePartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.namespacePart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespacePart([NotNull] HOPLGrammarParser.NamespacePartContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.namespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespace([NotNull] HOPLGrammarParser.NamespaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.namespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespace([NotNull] HOPLGrammarParser.NamespaceContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.importNamespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportNamespace([NotNull] HOPLGrammarParser.ImportNamespaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.importNamespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportNamespace([NotNull] HOPLGrammarParser.ImportNamespaceContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] HOPLGrammarParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] HOPLGrammarParser.IdentifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgs([NotNull] HOPLGrammarParser.ArgsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgs([NotNull] HOPLGrammarParser.ArgsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBody([NotNull] HOPLGrammarParser.BodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBody([NotNull] HOPLGrammarParser.BodyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.functionDec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDec([NotNull] HOPLGrammarParser.FunctionDecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.functionDec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDec([NotNull] HOPLGrammarParser.FunctionDecContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.handlerDec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHandlerDec([NotNull] HOPLGrammarParser.HandlerDecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.handlerDec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHandlerDec([NotNull] HOPLGrammarParser.HandlerDecContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCall([NotNull] HOPLGrammarParser.CallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCall([NotNull] HOPLGrammarParser.CallContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStat([NotNull] HOPLGrammarParser.StatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStat([NotNull] HOPLGrammarParser.StatContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] HOPLGrammarParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] HOPLGrammarParser.ExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.await"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAwait([NotNull] HOPLGrammarParser.AwaitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.await"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAwait([NotNull] HOPLGrammarParser.AwaitContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf([NotNull] HOPLGrammarParser.IfContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf([NotNull] HOPLGrammarParser.IfContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.elseIf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseIf([NotNull] HOPLGrammarParser.ElseIfContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.elseIf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseIf([NotNull] HOPLGrammarParser.ElseIfContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElse([NotNull] HOPLGrammarParser.ElseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElse([NotNull] HOPLGrammarParser.ElseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.while"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhile([NotNull] HOPLGrammarParser.WhileContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.while"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhile([NotNull] HOPLGrammarParser.WhileContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.for"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFor([NotNull] HOPLGrammarParser.ForContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.for"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFor([NotNull] HOPLGrammarParser.ForContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.foreach"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForeach([NotNull] HOPLGrammarParser.ForeachContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.foreach"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForeach([NotNull] HOPLGrammarParser.ForeachContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArg([NotNull] HOPLGrammarParser.ArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArg([NotNull] HOPLGrammarParser.ArgContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.varDec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDec([NotNull] HOPLGrammarParser.VarDecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.varDec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDec([NotNull] HOPLGrammarParser.VarDecContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.globalDec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGlobalDec([NotNull] HOPLGrammarParser.GlobalDecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.globalDec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGlobalDec([NotNull] HOPLGrammarParser.GlobalDecContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.assign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssign([NotNull] HOPLGrammarParser.AssignContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.assign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssign([NotNull] HOPLGrammarParser.AssignContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.unpack"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnpack([NotNull] HOPLGrammarParser.UnpackContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.unpack"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnpack([NotNull] HOPLGrammarParser.UnpackContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.unpacked"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnpacked([NotNull] HOPLGrammarParser.UnpackedContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.unpacked"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnpacked([NotNull] HOPLGrammarParser.UnpackedContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn([NotNull] HOPLGrammarParser.ReturnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn([NotNull] HOPLGrammarParser.ReturnContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeName([NotNull] HOPLGrammarParser.TypeNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeName([NotNull] HOPLGrammarParser.TypeNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.typeVal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeVal([NotNull] HOPLGrammarParser.TypeValContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.typeVal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeVal([NotNull] HOPLGrammarParser.TypeValContext context);
}
} // namespace HOPLGrammar
