//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.1-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from HOPLGrammar.g4 by ANTLR 4.6.1-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace HOPL.Grammar {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IHOPLGrammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.1-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class HOPLGrammarBaseListener : IHOPLGrammarListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>floatType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFloatType([NotNull] HOPLGrammarParser.FloatTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>floatType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFloatType([NotNull] HOPLGrammarParser.FloatTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>intType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntType([NotNull] HOPLGrammarParser.IntTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>intType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntType([NotNull] HOPLGrammarParser.IntTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>stringType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringType([NotNull] HOPLGrammarParser.StringTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>stringType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringType([NotNull] HOPLGrammarParser.StringTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>tupleType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTupleType([NotNull] HOPLGrammarParser.TupleTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>tupleType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTupleType([NotNull] HOPLGrammarParser.TupleTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>triggerType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTriggerType([NotNull] HOPLGrammarParser.TriggerTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>triggerType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTriggerType([NotNull] HOPLGrammarParser.TriggerTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>functionType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionType([NotNull] HOPLGrammarParser.FunctionTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>functionType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionType([NotNull] HOPLGrammarParser.FunctionTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>listType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterListType([NotNull] HOPLGrammarParser.ListTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>listType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitListType([NotNull] HOPLGrammarParser.ListTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>boolType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolType([NotNull] HOPLGrammarParser.BoolTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boolType</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolType([NotNull] HOPLGrammarParser.BoolTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>orExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrExpr([NotNull] HOPLGrammarParser.OrExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>orExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrExpr([NotNull] HOPLGrammarParser.OrExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>awaitExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAwaitExpr([NotNull] HOPLGrammarParser.AwaitExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>awaitExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAwaitExpr([NotNull] HOPLGrammarParser.AwaitExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>multExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultExpr([NotNull] HOPLGrammarParser.MultExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>multExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultExpr([NotNull] HOPLGrammarParser.MultExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>valExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValExpr([NotNull] HOPLGrammarParser.ValExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>valExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValExpr([NotNull] HOPLGrammarParser.ValExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>concatExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConcatExpr([NotNull] HOPLGrammarParser.ConcatExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>concatExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConcatExpr([NotNull] HOPLGrammarParser.ConcatExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>indexExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndexExpr([NotNull] HOPLGrammarParser.IndexExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>indexExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndexExpr([NotNull] HOPLGrammarParser.IndexExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>varExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarExpr([NotNull] HOPLGrammarParser.VarExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>varExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarExpr([NotNull] HOPLGrammarParser.VarExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>notExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotExpr([NotNull] HOPLGrammarParser.NotExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>notExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotExpr([NotNull] HOPLGrammarParser.NotExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>addiExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddiExpr([NotNull] HOPLGrammarParser.AddiExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>addiExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddiExpr([NotNull] HOPLGrammarParser.AddiExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>negExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNegExpr([NotNull] HOPLGrammarParser.NegExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>negExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNegExpr([NotNull] HOPLGrammarParser.NegExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>compExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompExpr([NotNull] HOPLGrammarParser.CompExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>compExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompExpr([NotNull] HOPLGrammarParser.CompExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>callExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCallExpr([NotNull] HOPLGrammarParser.CallExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>callExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCallExpr([NotNull] HOPLGrammarParser.CallExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>tupleExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTupleExpr([NotNull] HOPLGrammarParser.TupleExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>tupleExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTupleExpr([NotNull] HOPLGrammarParser.TupleExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>paranExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParanExpr([NotNull] HOPLGrammarParser.ParanExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>paranExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParanExpr([NotNull] HOPLGrammarParser.ParanExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>listExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterListExpr([NotNull] HOPLGrammarParser.ListExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>listExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitListExpr([NotNull] HOPLGrammarParser.ListExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>andExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAndExpr([NotNull] HOPLGrammarParser.AndExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>andExpr</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAndExpr([NotNull] HOPLGrammarParser.AndExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>intVal</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeVal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntVal([NotNull] HOPLGrammarParser.IntValContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>intVal</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeVal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntVal([NotNull] HOPLGrammarParser.IntValContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>stringVal</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeVal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringVal([NotNull] HOPLGrammarParser.StringValContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>stringVal</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeVal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringVal([NotNull] HOPLGrammarParser.StringValContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>floatVal</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeVal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFloatVal([NotNull] HOPLGrammarParser.FloatValContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>floatVal</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeVal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFloatVal([NotNull] HOPLGrammarParser.FloatValContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>boolVal</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeVal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolVal([NotNull] HOPLGrammarParser.BoolValContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boolVal</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.typeVal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolVal([NotNull] HOPLGrammarParser.BoolValContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>ifStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStat([NotNull] HOPLGrammarParser.IfStatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ifStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStat([NotNull] HOPLGrammarParser.IfStatContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>lockStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLockStat([NotNull] HOPLGrammarParser.LockStatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>lockStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLockStat([NotNull] HOPLGrammarParser.LockStatContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>decStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDecStat([NotNull] HOPLGrammarParser.DecStatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>decStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDecStat([NotNull] HOPLGrammarParser.DecStatContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>unpackStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnpackStat([NotNull] HOPLGrammarParser.UnpackStatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>unpackStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnpackStat([NotNull] HOPLGrammarParser.UnpackStatContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>exprStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprStat([NotNull] HOPLGrammarParser.ExprStatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>exprStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprStat([NotNull] HOPLGrammarParser.ExprStatContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>returnStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStat([NotNull] HOPLGrammarParser.ReturnStatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>returnStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStat([NotNull] HOPLGrammarParser.ReturnStatContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>foreachStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForeachStat([NotNull] HOPLGrammarParser.ForeachStatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>foreachStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForeachStat([NotNull] HOPLGrammarParser.ForeachStatContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>assignStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignStat([NotNull] HOPLGrammarParser.AssignStatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>assignStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignStat([NotNull] HOPLGrammarParser.AssignStatContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>forStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStat([NotNull] HOPLGrammarParser.ForStatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>forStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStat([NotNull] HOPLGrammarParser.ForStatContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>whileStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStat([NotNull] HOPLGrammarParser.WhileStatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>whileStat</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStat([NotNull] HOPLGrammarParser.WhileStatContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>ignoreUnpacked</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.unpacked"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIgnoreUnpacked([NotNull] HOPLGrammarParser.IgnoreUnpackedContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ignoreUnpacked</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.unpacked"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIgnoreUnpacked([NotNull] HOPLGrammarParser.IgnoreUnpackedContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>idUnpacked</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.unpacked"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdUnpacked([NotNull] HOPLGrammarParser.IdUnpackedContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>idUnpacked</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.unpacked"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdUnpacked([NotNull] HOPLGrammarParser.IdUnpackedContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>decUnpacked</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.unpacked"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDecUnpacked([NotNull] HOPLGrammarParser.DecUnpackedContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>decUnpacked</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.unpacked"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDecUnpacked([NotNull] HOPLGrammarParser.DecUnpackedContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>handlerDecNamespace</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.namespacePart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHandlerDecNamespace([NotNull] HOPLGrammarParser.HandlerDecNamespaceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>handlerDecNamespace</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.namespacePart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHandlerDecNamespace([NotNull] HOPLGrammarParser.HandlerDecNamespaceContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>globalDecNamespace</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.namespacePart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGlobalDecNamespace([NotNull] HOPLGrammarParser.GlobalDecNamespaceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>globalDecNamespace</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.namespacePart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGlobalDecNamespace([NotNull] HOPLGrammarParser.GlobalDecNamespaceContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>functionDecNamespace</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.namespacePart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDecNamespace([NotNull] HOPLGrammarParser.FunctionDecNamespaceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>functionDecNamespace</c>
	/// labeled alternative in <see cref="HOPLGrammarParser.namespacePart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDecNamespace([NotNull] HOPLGrammarParser.FunctionDecNamespaceContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.compileUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompileUnit([NotNull] HOPLGrammarParser.CompileUnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.compileUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompileUnit([NotNull] HOPLGrammarParser.CompileUnitContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.namespaceDec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespaceDec([NotNull] HOPLGrammarParser.NamespaceDecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.namespaceDec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespaceDec([NotNull] HOPLGrammarParser.NamespaceDecContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.namespaceBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespaceBody([NotNull] HOPLGrammarParser.NamespaceBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.namespaceBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespaceBody([NotNull] HOPLGrammarParser.NamespaceBodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.namespacePart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespacePart([NotNull] HOPLGrammarParser.NamespacePartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.namespacePart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespacePart([NotNull] HOPLGrammarParser.NamespacePartContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.namespace"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespace([NotNull] HOPLGrammarParser.NamespaceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.namespace"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespace([NotNull] HOPLGrammarParser.NamespaceContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.importNamespace"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportNamespace([NotNull] HOPLGrammarParser.ImportNamespaceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.importNamespace"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportNamespace([NotNull] HOPLGrammarParser.ImportNamespaceContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] HOPLGrammarParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] HOPLGrammarParser.IdentifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.args"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgs([NotNull] HOPLGrammarParser.ArgsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.args"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgs([NotNull] HOPLGrammarParser.ArgsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBody([NotNull] HOPLGrammarParser.BodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBody([NotNull] HOPLGrammarParser.BodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.functionDec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDec([NotNull] HOPLGrammarParser.FunctionDecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.functionDec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDec([NotNull] HOPLGrammarParser.FunctionDecContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.handlerDec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHandlerDec([NotNull] HOPLGrammarParser.HandlerDecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.handlerDec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHandlerDec([NotNull] HOPLGrammarParser.HandlerDecContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCall([NotNull] HOPLGrammarParser.CallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCall([NotNull] HOPLGrammarParser.CallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStat([NotNull] HOPLGrammarParser.StatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStat([NotNull] HOPLGrammarParser.StatContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] HOPLGrammarParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] HOPLGrammarParser.ExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.await"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAwait([NotNull] HOPLGrammarParser.AwaitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.await"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAwait([NotNull] HOPLGrammarParser.AwaitContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.lock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLock([NotNull] HOPLGrammarParser.LockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.lock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLock([NotNull] HOPLGrammarParser.LockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.if"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf([NotNull] HOPLGrammarParser.IfContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.if"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf([NotNull] HOPLGrammarParser.IfContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.elseIf"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseIf([NotNull] HOPLGrammarParser.ElseIfContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.elseIf"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseIf([NotNull] HOPLGrammarParser.ElseIfContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.else"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElse([NotNull] HOPLGrammarParser.ElseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.else"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElse([NotNull] HOPLGrammarParser.ElseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.while"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhile([NotNull] HOPLGrammarParser.WhileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.while"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhile([NotNull] HOPLGrammarParser.WhileContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.for"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor([NotNull] HOPLGrammarParser.ForContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.for"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor([NotNull] HOPLGrammarParser.ForContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.foreach"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForeach([NotNull] HOPLGrammarParser.ForeachContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.foreach"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForeach([NotNull] HOPLGrammarParser.ForeachContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.arg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArg([NotNull] HOPLGrammarParser.ArgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.arg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArg([NotNull] HOPLGrammarParser.ArgContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.varDec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDec([NotNull] HOPLGrammarParser.VarDecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.varDec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDec([NotNull] HOPLGrammarParser.VarDecContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.globalDec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGlobalDec([NotNull] HOPLGrammarParser.GlobalDecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.globalDec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGlobalDec([NotNull] HOPLGrammarParser.GlobalDecContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.assign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign([NotNull] HOPLGrammarParser.AssignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.assign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign([NotNull] HOPLGrammarParser.AssignContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.unpack"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnpack([NotNull] HOPLGrammarParser.UnpackContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.unpack"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnpack([NotNull] HOPLGrammarParser.UnpackContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.unpacked"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnpacked([NotNull] HOPLGrammarParser.UnpackedContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.unpacked"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnpacked([NotNull] HOPLGrammarParser.UnpackedContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn([NotNull] HOPLGrammarParser.ReturnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn([NotNull] HOPLGrammarParser.ReturnContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeName([NotNull] HOPLGrammarParser.TypeNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeName([NotNull] HOPLGrammarParser.TypeNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="HOPLGrammarParser.typeVal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeVal([NotNull] HOPLGrammarParser.TypeValContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="HOPLGrammarParser.typeVal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeVal([NotNull] HOPLGrammarParser.TypeValContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace HOPL.Grammar
